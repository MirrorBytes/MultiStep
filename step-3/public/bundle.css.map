{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Form.svelte",
    "Input.svelte",
    "Select.svelte",
    "Step.svelte"
  ],
  "sourcesContent": [
    "<script type=\"text/typescript\">import states from \"./us_states\";\nimport Form from \"./components/Form.svelte\";\nimport Step from \"./components/Step.svelte\";\nimport Input from \"./components/Input.svelte\";\nimport Select from \"./components/Select.svelte\";\nconst name = \"order\";\n</script>\n\n<style>\n  main {\n    font-family: \"Lato\", sans-serif;\n  }\n</style>\n\n<main>\n\t<Form {name} let:store let:multi>\n    <Step name=\"Customer Info\" {multi}>\n      <Input {store} type=\"text\" name=\"first_name\" placeholder=\"First Name\" />\n      <Input {store} type=\"text\" name=\"last_name\" placeholder=\"Last Name\" />\n      <Input {store} type=\"text\" name=\"phone\" placeholder=\"Phone Number\" />\n      <Input {store} type=\"email\" name=\"email\" placeholder=\"Email\" />\n    </Step>\n\n    <Step name=\"Billing Info\" {multi}>\n      <Input {store} type=\"text\" name=\"bill_address\" placeholder=\"Address\" />\n      <Input {store} type=\"text\" name=\"bill_address2\" placeholder=\"Address 2\" />\n      <Input {store} type=\"text\" name=\"bill_city\" placeholder=\"City\" />\n      <Select {store} name=\"bill_state\">\n        <option>State</option>\n\n        {#each states as state}\n          <option value={state}>{state}</option>\n        {/each}\n      </Select>\n      <Input {store} type=\"text\" name=\"bill_zip\" placeholder=\"Zip Code\" />\n    </Step>\n\n    <Step name=\"Shipping Info\" {multi}>\n      <Input {store} type=\"text\" name=\"ship_address\" placeholder=\"Address\" />\n      <Input {store} type=\"text\" name=\"ship_address2\" placeholder=\"Address 2\" />\n      <Input {store} type=\"text\" name=\"ship_city\" placeholder=\"City\" />\n      <Select {store} name=\"ship_state\">\n        <option>State</option>\n\n        {#each states as state}\n          <option value={state}>{state}</option>\n        {/each}\n      </Select>\n      <Input {store} type=\"text\" name=\"ship_zip\" placeholder=\"Zip Code\" />\n    </Step>\n\n    <Step name=\"Payment Info\" {multi}>\n      <Input {store} type=\"text\" name=\"card\" placeholder=\"Card Number\" />\n      <Input {store} type=\"text\" name=\"month\" placeholder=\"Month\" />\n      <Input {store} type=\"text\" name=\"year\" placeholder=\"Year\" />\n      <Input {store} type=\"text\" name=\"cvv\" placeholder=\"CVV\" />\n      <Input {store} type=\"text\" name=\"card_zip\" placeholder=\"Zip Code (optional)\" />\n    </Step>\n  </Form>\n</main>\n",
    "<script type=\"text/typescript\">import { onMount } from \"svelte\";\nimport { writable } from \"svelte/store\";\n;\nimport { local } from \"../localStore\";\n;\nexport let name;\nconst store = name !== undefined ? local(name, {}) : writable({});\nconst multi = writable({});\nlet multi_loc = {};\nlet current = 0;\nmulti.subscribe(v => (multi_loc = v));\nfunction prev() {\n    if (Object.keys(multi_loc)[current - 1]) {\n        multi.update(v => {\n            v[Object.keys(multi_loc)[current]] = false;\n            return v;\n        });\n        current -= 1;\n        multi.update(v => {\n            v[Object.keys(multi_loc)[current]] = true;\n            return v;\n        });\n    }\n}\nfunction next() {\n    if (Object.keys(multi_loc)[current + 1]) {\n        multi.update(v => {\n            v[Object.keys(multi_loc)[current]] = false;\n            return v;\n        });\n        current += 1;\n        multi.update(v => {\n            v[Object.keys(multi_loc)[current]] = true;\n            return v;\n        });\n    }\n}\nonMount(() => {\n    multi.update(v => {\n        v[Object.keys(multi_loc)[current]] = true;\n        return v;\n    });\n});\n</script>\n\n<style scoped>\n  .wrapper {\n    margin: 0 auto;\n    padding: 0.5rem;\n    width: 70%;\n    border-radius: 0.5rem;\n    border: 1px solid;\n  }\n\n  .controls {\n    margin-top: 1rem;\n    display: flex;\n  }\n\n  button {\n    margin: 0 0.25rem;\n    width: calc(50% - 0.25rem);\n  }\n\n  button:first-child {\n    margin-left: 0;\n  }\n\n  button:last-child {\n    margin-right: 0;\n  }\n\n  input {\n    margin-left: 0.25rem;\n    width: calc(50% - 0.25rem);\n  }\n</style>\n\n<div class=\"wrapper\">\n  <form {...$$restProps} class=\"form\">\n    <slot {store} {multi} />\n\n    <div class=\"controls\">\n      {#if Object.keys(multi_loc)[current - 1]}\n        <button on:click|preventDefault={prev}>Prev</button>\n      {/if}\n\n      {#if Object.keys(multi_loc)[current + 1]}\n        <button on:click|preventDefault={next}>Next</button>\n      {/if}\n\n      {#if !Object.keys(multi_loc)[current + 1]}\n        <input type=\"submit\" placeholder=\"Submit\" />\n      {/if}\n    </div>\n  </form>\n</div>\n",
    "<script type=\"text/typescript\">;\nexport let store;\nexport let name;\nexport let onInput = null;\nlet value;\nstore.subscribe((v) => (value = v[name]));\nconst ourInput = (e) => {\n    store.update(v => {\n        v[name] = value;\n        return v;\n    });\n    if (onInput) {\n        onInput(e);\n    }\n};\n</script>\n\n<style scoped>\n  label {\n    margin: 0.25rem;\n    max-width: calc(50% - 0.25rem);\n    flex: 1 0 50%;\n  }\n\n  label:nth-child(even) {\n    margin-left: 0;\n  }\n\n  label:nth-child(odd) {\n    margin-right: 0;\n  }\n\n  input {\n    margin: 0.25rem 0 0 0;\n    padding: 0.25rem;\n    width: calc(100% - 0.75rem);\n  }\n</style>\n\n<label>\n  <div>{$$restProps.placeholder}</div>\n\n  <input bind:value on:input={ourInput} {name} {...$$restProps} />\n</label>\n",
    "<script type=\"text/typescript\">;\nexport let store;\nexport let name;\nexport let onChange = null;\nlet value;\nstore.subscribe((v) => (value = v[name]));\nconst ourChange = (e) => {\n    store.update(v => {\n        v[name] = value;\n        return v;\n    });\n    if (onChange) {\n        onChange(e);\n    }\n};\n</script>\n\n<style>\n  label {\n    margin: 0.25rem;\n    position: relative;\n  }\n\n  select {\n    padding: 0.25rem;\n    bottom: 0;\n    position: absolute;\n  }\n</style>\n\n<label>\n  <select bind:value on:blur={ourChange} {name} {...$$restProps}>\n    <slot />\n  </select>\n</label>\n",
    "<script type=\"text/typescript\">;\n;\nexport let name;\nexport let multi;\nmulti.update(v => {\n    v[name] = false;\n    return v;\n});\nlet visible = false;\nmulti.subscribe(v => (visible = v[name]));\n</script>\n\n<style scoped>\n  h2 {\n    width: 100%;\n  }\n\n  div {\n    display: flex;\n    flex-flow: row wrap;\n  }\n</style>\n\n{#if visible}\n  <div>\n    <h2>{name}</h2>\n\n    <slot />\n  </div>\n{/if}\n"
  ],
  "names": [],
  "mappings": "AASE,IAAI,cAAC,CAAC,AACJ,WAAW,CAAE,MAAM,CAAC,CAAC,UAAU,AACjC,CAAC;ACmCD,QAAQ,cAAC,CAAC,AACR,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,MAAM,CACf,KAAK,CAAE,GAAG,CACV,aAAa,CAAE,MAAM,CACrB,MAAM,CAAE,GAAG,CAAC,KAAK,AACnB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,CAAC,CAAC,OAAO,CACjB,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,AAC5B,CAAC,AAED,oBAAM,YAAY,AAAC,CAAC,AAClB,WAAW,CAAE,CAAC,AAChB,CAAC,AAED,oBAAM,WAAW,AAAC,CAAC,AACjB,YAAY,CAAE,CAAC,AACjB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,WAAW,CAAE,OAAO,CACpB,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,AAC5B,CAAC;ACzDD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAC9B,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,AACf,CAAC,AAED,mBAAK,WAAW,IAAI,CAAC,AAAC,CAAC,AACrB,WAAW,CAAE,CAAC,AAChB,CAAC,AAED,mBAAK,WAAW,GAAG,CAAC,AAAC,CAAC,AACpB,YAAY,CAAE,CAAC,AACjB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrB,OAAO,CAAE,OAAO,CAChB,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,AAC7B,CAAC;AClBD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,OAAO,CACf,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,OAAO,CAChB,MAAM,CAAE,CAAC,CACT,QAAQ,CAAE,QAAQ,AACpB,CAAC;ACdD,EAAE,cAAC,CAAC,AACF,KAAK,CAAE,IAAI,AACb,CAAC,AAED,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,GAAG,CAAC,IAAI,AACrB,CAAC"
}